
// При создании формы на сервере
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Получаем параметры
	Если Параметры.Свойство("Поездка") Тогда
		Поездка = Параметры.Поездка;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущийПользователь") Тогда
		ТекущийПользователь = Параметры.ТекущийПользователь;
	Иначе
		ТекущийПользователь = "";
	КонецЕсли;
	
	// Заполняем данные
	ЗаполнитьДанныеПоездки();
	
КонецПроцедуры

// Заполнение данных о поездке
&НаСервере
Процедура ЗаполнитьДанныеПоездки()
	
	// Запрос для получения данных
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Поездка.ДатаПоездки КАК ДатаПоездки,
		|	Поездка.КоличествоМест КАК КоличествоМест,
		|	Поездка.КоличествоЗанятыхМест КАК КоличествоЗанятыхМест,
		|	Поездка.МаршрутПоездки.(
		|		Адрес КАК Адрес,
		|		Адрес.Наименование КАК Наименование,
		|		Время КАК Время,
		|		Остановка КАК Остановка
		|	) КАК МаршрутПоездки
		|ИЗ
		|	Документ.Поездка КАК Поездка
		|ГДЕ
		|	Поездка.Ссылка = &Поездка";
	
	Запрос.УстановитьПараметр("Поездка", Поездка);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	// Заполняем реквизиты
	ДатаПоездки = Выборка.ДатаПоездки;
	СвободныеМеста = Выборка.КоличествоМест - Выборка.КоличествоЗанятыхМест;
	
	// Заполняем таблицу маршрута
	МаршрутПоездки.Очистить();
	ВыборкаМаршрута = Выборка.МаршрутПоездки.Выбрать();
	
	Пока ВыборкаМаршрута.Следующий() Цикл
		НоваяСтрока = МаршрутПоездки.Добавить();
		НоваяСтрока.Наименование = ?(ВыборкаМаршрута.Наименование = Неопределено, "", ВыборкаМаршрута.Наименование);
		НоваяСтрока.Адрес = ВыборкаМаршрута.Адрес;
		НоваяСтрока.Время = ВыборкаМаршрута.Время;
		НоваяСтрока.Остановка = ВыборкаМаршрута.Остановка;
	КонецЦикла;
		
КонецПроцедуры

// Команда Записаться
&НаКлиенте
Процедура ЗаписатьсяНаПоездку(Команда)
	
	СинхронизироватьНажатие();
	
	// Передача параметров в форму ВыборОстановок
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Поездка", Поездка);
	ПараметрыФормы.Вставить("Пользователь", ТекущийПользователь);
	
	ОткрытьФорму("ОбщаяФорма.ВыборОстановок", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

Процедура СинхронизироватьНажатие()
    MobileSync.СинхронизироватьДанныеНажатие();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьМаршрут(Команда)
	
	СинхронизироватьНажатие();
		
	#Если МобильноеПриложениеКлиент Тогда
		// Получаем данные маршрута
		ДанныеМаршрута = ПолучитьДанныеМаршрута(Поездка);
		Если ДанныеМаршрута = Неопределено ИЛИ ДанныеМаршрута.Количество() = 0 Тогда
			ПоказатьПредупреждение(, "Для выбранной поездки нет данных маршрута!");
			Возврат;
		КонецЕсли;
		
		// Получаем текущее местоположение устройства
		ТекущееМестоположение = ПолучитьТекущееМестоположение();
		
		// Формируем URL для Google Maps
		URL = СформироватьURLМаршрута(ДанныеМаршрута, ТекущееМестоположение);
		Если НЕ ЗначениеЗаполнено(URL) Тогда
			ПоказатьПредупреждение(, "Не удалось построить маршрут: недостаточно точек!");
			Возврат;
		КонецЕсли;
		
		// Запускаем приложение карт
		Запуск = Новый ЗапускПриложенияМобильногоУстройства("android.intent.action.VIEW", URL);
		Попытка
			Запуск.Запустить(Ложь);
		Исключение
			ПоказатьПредупреждение(, "Ошибка запуска приложения карт: "  + ОписаниеОшибки());
		КонецПопытки;
	#Иначе
		// Для немобильных клиентов показываем маршрут без местоположения
		ДанныеМаршрута = ПолучитьДанныеМаршрута(Поездка);
		Если ДанныеМаршрута = Неопределено ИЛИ ДанныеМаршрута.Количество() = 0 Тогда
			ПоказатьПредупреждение(, "Для выбранной поездки нет данных маршрута!");
			Возврат;
		КонецЕсли;
		
		URL = СформироватьURLМаршрута(ДанныеМаршрута);
		Если НЕ ЗначениеЗаполнено(URL) Тогда
			ПоказатьПредупреждение(, "Не удалось построить маршрут: недостаточно точек!");
			Возврат;
		КонецЕсли;
				
		// Открываем URL в браузере
		Попытка
			ПерейтиПоНавигационнойСсылке(URL);
		Исключение
			ПоказатьПредупреждение(, "Ошибка открытия карты: "  + ОписаниеОшибки());
		КонецПопытки;
	#КонецЕсли
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступноПодключениеКИнтернету()
	Возврат СервисАвторизации.ПроверитьСвязьССервером();
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеМаршрута(Поездка)
	// Запрос к табличной части МаршрутПоездки
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоездкаМаршрутПоездки.Адрес.Страна КАК Страна,
	|	ПоездкаМаршрутПоездки.Адрес.Регион КАК Регион,
	|	ПоездкаМаршрутПоездки.Адрес.Город КАК Город,
	|	ПоездкаМаршрутПоездки.Адрес.Улица КАК Улица,
	|	ПоездкаМаршрутПоездки.Адрес.Дом КАК Дом,
	|	ПоездкаМаршрутПоездки.Адрес.Индекс КАК Индекс,
	|	ПоездкаМаршрутПоездки.Время КАК Время
	|ИЗ
	|	Документ.Поездка.МаршрутПоездки КАК ПоездкаМаршрутПоездки
	|ГДЕ
	|	ПоездкаМаршрутПоездки.Ссылка = &Поездка
	|УПОРЯДОЧИТЬ ПО
	|	ПоездкаМаршрутПоездки.Время";
	
	Запрос.УстановитьПараметр("Поездка", Поездка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Формируем массив адресов
	ДанныеМаршрута = Новый Массив;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		// Проверяем обязательность поля Город
		Если НЕ ЗначениеЗаполнено(Выборка.Город) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураАдреса = Новый Структура;
		СтруктураАдреса.Вставить("Страна", Выборка.Страна);
		СтруктураАдреса.Вставить("Регион", Выборка.Регион);
		СтруктураАдреса.Вставить("Город", Выборка.Город);
		СтруктураАдреса.Вставить("Улица", Выборка.Улица);
		СтруктураАдреса.Вставить("Дом", Выборка.Дом);
		СтруктураАдреса.Вставить("Индекс", Выборка.Индекс);
		СтруктураАдреса.Вставить("Время", Выборка.Время);
		ДанныеМаршрута.Добавить(СтруктураАдреса);
	КонецЦикла;
	
	Возврат ?(ДанныеМаршрута.Количество() > 0, ДанныеМаршрута, Неопределено);
КонецФункции

&НаКлиенте
Функция СформироватьURLМаршрута(ДанныеМаршрута, ТекущееМестоположение = Неопределено)
	// Проверяем, есть ли минимум два адреса для маршрута
	Если ДанныеМаршрута.Количество() < 2 Тогда
		Возврат "";
	КонецЕсли;
	
	// Формируем начальную точку
	ПервыйАдрес = ДанныеМаршрута[0];
	ЧастиАдреса = Новый Массив;
	Если ЗначениеЗаполнено(ПервыйАдрес.Индекс) Тогда
		ЧастиАдреса.Добавить(ПервыйАдрес.Индекс);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПервыйАдрес.Страна) Тогда
		ЧастиАдреса.Добавить(ПервыйАдрес.Страна);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПервыйАдрес.Регион) Тогда
		ЧастиАдреса.Добавить(ПервыйАдрес.Регион);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПервыйАдрес.Город) Тогда
		ЧастиАдреса.Добавить(ПервыйАдрес.Город);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПервыйАдрес.Улица) Тогда
		ЧастиАдреса.Добавить(ПервыйАдрес.Улица);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПервыйАдрес.Дом) Тогда
		ЧастиАдреса.Добавить(ПервыйАдрес.Дом);
	КонецЕсли;
	Начало = СтрЗаменить(СтрСоединить(ЧастиАдреса, ","), " ", "+");
	
	// Формируем конечную точку
	ПоследнийАдрес = ДанныеМаршрута[ДанныеМаршрута.Количество() - 1];
	ЧастиАдреса = Новый Массив;
	Если ЗначениеЗаполнено(ПоследнийАдрес.Индекс) Тогда
		ЧастиАдреса.Добавить(ПоследнийАдрес.Индекс);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоследнийАдрес.Страна) Тогда
		ЧастиАдреса.Добавить(ПоследнийАдрес.Страна);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоследнийАдрес.Регион) Тогда
		ЧастиАдреса.Добавить(ПоследнийАдрес.Регион);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоследнийАдрес.Город) Тогда
		ЧастиАдреса.Добавить(ПоследнийАдрес.Город);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоследнийАдрес.Улица) Тогда
		ЧастиАдреса.Добавить(ПоследнийАдрес.Улица);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоследнийАдрес.Дом) Тогда
		ЧастиАдреса.Добавить(ПоследнийАдрес.Дом);
	КонецЕсли;
	Конец = СтрЗаменить(СтрСоединить(ЧастиАдреса, ","), " ", "+");
	
	// Формируем промежуточные точки (если есть)
	ПромежуточныеТочки = "";
	Для Индекс = 1 По ДанныеМаршрута.Количество() - 2 Цикл
		Адрес = ДанныеМаршрута[Индекс];
		ЧастиАдреса = Новый Массив;
		Если ЗначениеЗаполнено(Адрес.Индекс) Тогда
			ЧастиАдреса.Добавить(Адрес.Индекс);
		КонецЕсли;
		Если ЗначениеЗаполнено(Адрес.Страна) Тогда
			ЧастиАдреса.Добавить(Адрес.Страна);
		КонецЕсли;
		Если ЗначениеЗаполнено(Адрес.Регион) Тогда
			ЧастиАдреса.Добавить(Адрес.Регион);
		КонецЕсли;
		Если ЗначениеЗаполнено(Адрес.Город) Тогда
			ЧастиАдреса.Добавить(Адрес.Город);
		КонецЕсли;
		Если ЗначениеЗаполнено(Адрес.Улица) Тогда
			ЧастиАдреса.Добавить(Адрес.Улица);
		КонецЕсли;
		Если ЗначениеЗаполнено(Адрес.Дом) Тогда
			ЧастиАдреса.Добавить(Адрес.Дом);
		КонецЕсли;
		ПромежуточныеТочки = ПромежуточныеТочки + ?(ПромежуточныеТочки = "", "", "|") + 
			СтрЗаменить(СтрСоединить(ЧастиАдреса, ","), " ", "+");
	КонецЦикла;
		
	Если ТекущееМестоположение <> Неопределено Тогда
	     Метка = Формат(ТекущееМестоположение.Широта, "ЧРД=.; ЧГ=0") + "," + Формат(ТекущееМестоположение.Долгота, "ЧРД=.; ЧГ=0");
	     URL = URL + "&q=" + Метка;
	КонецЕсли;

	
	// Формируем URL
	URL = "https://maps.google.com/maps?saddr=" + Начало + "&daddr=" + Конец;
	Если ПромежуточныеТочки <> "" Тогда
		URL = URL + "+to:" + ПромежуточныеТочки;
	КонецЕсли;
	
	Возврат URL;
КонецФункции

&НаКлиенте
Функция ПолучитьТекущееМестоположение()
	ТекущееМестоположение = Неопределено;
	
	#Если МобильноеПриложениеКлиент Тогда
		Провайдер = СредстваГеопозиционирования.ПолучитьСамогоЭнергоЭкономичногоПровайдера();
		Если Провайдер = Неопределено Тогда
			ПоказатьПредупреждение(, "Нет доступных провайдеров геолокации!");
			Возврат ТекущееМестоположение;
		КонецЕсли;
		
		Попытка
			Если СредстваГеопозиционирования.ОбновитьМестоположение(Провайдер.Имя, 60) Тогда
				ДанныеМестоположения = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(Провайдер.Имя);
				Если ДанныеМестоположения <> Неопределено Тогда
					Координаты = ДанныеМестоположения.Координаты;
					Если Координаты.Широта >= -90 И Координаты.Широта <= 90 И Координаты.Долгота >= -180 И Координаты.Долгота <= 180 Тогда
						ТекущееМестоположение = Новый Структура("Широта, Долгота", Координаты.Широта, Координаты.Долгота);
					Иначе
						ПоказатьПредупреждение(, "Некорректные координаты!");
					КонецЕсли;
				Иначе
					ПоказатьПредупреждение(, "Данные местоположения не получены!");
				КонецЕсли;
			Иначе
				ПоказатьПредупреждение(, "Не удалось обновить местоположение!");
			КонецЕсли;
		Исключение
			ПоказатьПредупреждение(, "Ошибка геолокации: " + ОписаниеОшибки());
		КонецПопытки;
	#Иначе
		ПоказатьПредупреждение(, "Геолокация недоступна в этом клиенте!");
	#КонецЕсли
	
	Возврат ТекущееМестоположение;
КонецФункции

// Команда для показа маршрута от текущего местоположения до выбранного адреса
&НаКлиенте
Процедура ПоказатьМаршрутДоОстановки(Команда)
	
	СинхронизироватьНажатие();
	
	#Если МобильноеПриложениеКлиент Тогда
		// Получаем текущую строку с адресом
		ТекущаяСтрока = Элементы.МаршрутПоездки.ТекущиеДанные;
		Если ТекущаяСтрока = Неопределено Тогда
			ПоказатьПредупреждение(, "Выберите адрес для построения маршрута!");
			Возврат;
		КонецЕсли;
		
		// Получаем данные адреса
		ДанныеАдреса = ПолучитьДанныеАдреса(ТекущаяСтрока.Адрес);
		Если ДанныеАдреса = Неопределено Тогда
			ПоказатьПредупреждение(, "Не удалось получить данные адреса!");
			Возврат;
		КонецЕсли;
		
		// Получаем текущее местоположение устройства
		ТекущееМестоположение = ПолучитьГеопозициюУстройства();
		Если ТекущееМестоположение = Неопределено Тогда
			ПоказатьПредупреждение(, "Не удалось определить текущее местоположение!");
			Возврат;
		КонецЕсли;
		
		// Формируем URL для Google Maps
		URL = СоздатьURLМаршрута(ДанныеАдреса, ТекущееМестоположение);
		Если НЕ ЗначениеЗаполнено(URL) Тогда
			ПоказатьПредупреждение(, "Не удалось построить маршрут!");
			Возврат;
		КонецЕсли;
				
		// Запускаем приложение карт
		Запуск = Новый ЗапускПриложенияМобильногоУстройства("android.intent.action.VIEW", URL);
		Попытка
			Запуск.Запустить(Ложь);
		Исключение
			ПоказатьПредупреждение(, "Ошибка запуска приложения карт: " + ОписаниеОшибки());
		КонецПопытки;
	#Иначе
		// Для немобильных клиентов показываем маршрут без местоположения
		ТекущаяСтрока = Элементы.МаршрутПоездки.ТекущиеДанные;
		Если ТекущаяСтрока = Неопределено Тогда
			ПоказатьПредупреждение(, "Выберите адрес для построения маршрута!");
			Возврат;
		КонецЕсли;
		
		ДанныеАдреса = ПолучитьДанныеАдреса(ТекущаяСтрока.Адрес);
		Если ДанныеАдреса = Неопределено Тогда
			ПоказатьПредупреждение(, "Не удалось получить данные адреса!");
			Возврат;
		КонецЕсли;
		
		URL = СоздатьURLМаршрута(ДанныеАдреса);
		Если НЕ ЗначениеЗаполнено(URL) Тогда
			ПоказатьПредупреждение(, "Не удалось построить маршрут!");
			Возврат;
		КонецЕсли;
				
		// Открываем URL в браузере
		Попытка
			ПерейтиПоНавигационнойСсылке(URL);
		Исключение
			ПоказатьПредупреждение(, "Ошибка открытия карты: " + ОписаниеОшибки());
		КонецПопытки;
	#КонецЕсли
	
КонецПроцедуры

// Проверка подключения к интернету
&НаСервереБезКонтекста
Функция ПроверитьИнтернетСоединение()
	Возврат СервисАвторизации.ПроверитьСвязьССервером();
КонецФункции

// Получение данных адреса из справочника
&НаСервереБезКонтекста
Функция ПолучитьДанныеАдреса(АдресСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Адреса.Страна КАК Страна,
	|	Адреса.Регион КАК Регион,
	|	Адреса.Город КАК Город,
	|	Адреса.Улица КАК Улица,
	|	Адреса.Дом КАК Дом,
	|	Адреса.Индекс КАК Индекс
	|ИЗ
	|	Справочник.Адреса КАК Адреса
	|ГДЕ
	|	Адреса.Ссылка = &АдресСсылка";
	
	Запрос.УстановитьПараметр("АдресСсылка", АдресСсылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Если НЕ ЗначениеЗаполнено(Выборка.Город) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Город обязателен для адреса!'");
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураАдреса = Новый Структура;
	СтруктураАдреса.Вставить("Страна", Выборка.Страна);
	СтруктураАдреса.Вставить("Регион", Выборка.Регион);
	СтруктураАдреса.Вставить("Город", Выборка.Город);
	СтруктураАдреса.Вставить("Улица", Выборка.Улица);
	СтруктураАдреса.Вставить("Дом", Выборка.Дом);
	СтруктураАдреса.Вставить("Индекс", Выборка.Индекс);
	
	Возврат СтруктураАдреса;
	
КонецФункции

// Формирование URL для маршрута
&НаКлиенте
Функция СоздатьURLМаршрута(ДанныеАдреса, ТекущееМестоположение = Неопределено)
	
	// Формируем конечную точку
	ЧастиАдреса = Новый Массив;
	Если ЗначениеЗаполнено(ДанныеАдреса.Индекс) Тогда
		ЧастиАдреса.Добавить(ДанныеАдреса.Индекс);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеАдреса.Страна) Тогда
		ЧастиАдреса.Добавить(ДанныеАдреса.Страна);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеАдреса.Регион) Тогда
		ЧастиАдреса.Добавить(ДанныеАдреса.Регион);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеАдреса.Город) Тогда
		ЧастиАдреса.Добавить(ДанныеАдреса.Город);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеАдреса.Улица) Тогда
		ЧастиАдреса.Добавить(ДанныеАдреса.Улица);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеАдреса.Дом) Тогда
		ЧастиАдреса.Добавить(ДанныеАдреса.Дом);
	КонецЕсли;
	КонечныйАдрес = СтрЗаменить(СтрСоединить(ЧастиАдреса, ","), " ", "+");
	
	// Формируем URL
	Если ТекущееМестоположение <> Неопределено Тогда
		Начало = Формат(ТекущееМестоположение.Широта, "ЧРД=.; ЧГ=0") + "," + Формат(ТекущееМестоположение.Долгота, "ЧРД=.; ЧГ=0");
		URL = "https://maps.google.com/maps?saddr=" + Начало + "&daddr=" + КонечныйАдрес;
	Иначе
		URL = "https://maps.google.com/maps?daddr=" + КонечныйАдрес;
	КонецЕсли;
	
	Возврат URL;
	
КонецФункции

// Получение текущей геопозиции устройства
&НаКлиенте
Функция ПолучитьГеопозициюУстройства()
	
	ТекущееМестоположение = Неопределено;
	
	#Если МобильноеПриложениеКлиент Тогда
		Провайдер = СредстваГеопозиционирования.ПолучитьСамогоЭнергоЭкономичногоПровайдера();
		Если Провайдер = Неопределено Тогда
			ПоказатьПредупреждение(, "Нет доступных провайдеров геолокации!");
			Возврат ТекущееМестоположение;
		КонецЕсли;
		
		Попытка
			Если СредстваГеопозиционирования.ОбновитьМестоположение(Провайдер.Имя, 60) Тогда
				ДанныеМестоположения = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(Провайдер.Имя);
				Если ДанныеМестоположения <> Неопределено Тогда
					Координаты = ДанныеМестоположения.Координаты;
					Если Координаты.Широта >= -90 И Координаты.Широта <= 90 И Координаты.Долгота >= -180 И Координаты.Долгота <= 180 Тогда
						ТекущееМестоположение = Новый Структура("Широта, Долгота", Координаты.Широта, Координаты.Долгота);
					Иначе
						ПоказатьПредупреждение(, "Некорректные координаты!");
					КонецЕсли;
				Иначе
					ПоказатьПредупреждение(, "Данные местоположения не получены!");
				КонецЕсли;
			Иначе
				ПоказатьПредупреждение(, "Не удалось обновить местоположение!");
			КонецЕсли;
		Исключение
			ПоказатьПредупреждение(, "Ошибка геолокации: " + ОписаниеОшибки());
		КонецПопытки;
	#Иначе
		ПоказатьПредупреждение(, "Геолокация недоступна в этом клиенте!");
	#КонецЕсли
	
	Возврат ТекущееМестоположение;
	
КонецФункции